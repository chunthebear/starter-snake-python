{"version":3,"sources":["utils/game-state.js","reducers/index.js","utils/url.js","components/blank-state.jsx","theme/index.js","components/loading-indicator.jsx","components/grid.jsx","components/board.jsx","io/websocket.js","utils/inline-svg.js","utils/engine-client.js","components/avatar.jsx","components/scoreboard.jsx","components/mediaControls.jsx","components/logo.jsx","components/game.jsx","actions/index.js","containers/app.jsx","index.js"],"names":["DEFAULT_HEAD_DIRECTION","TYPE_HEAD","TYPE_TAIL","TYPE_BODY","formatFrame","frame","Turn","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Snakes","Symbol","iterator","next","done","snake","value","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Body","part","X","Y","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Food","food","cleanFrame","positions","snakes","formatSnakes","turn","map","formatPosition","gameOver","isLastFrameOfGame","sanitizeFrame","sanitizedFrame","cloneDeep","i","headSvg","tailSvg","_id","formatSnake","body","_","partIndex","shouldRender","tailIndex","length","head","tail","currPart","nextPart","shouldRenderPart","type","getType","_formatPosition","x","y","direction","formatDirection","formatSnakePart","color","Color","ID","name","Name","health","Health","isDead","Death","death","formatDeath","HeadType","toLowerCase","TailType","HeadSvg","TailSvg","cause","Cause","pos","getDirection","headDirection","uniqueIndex","Object","toConsumableArray","Set","p","concat","findIndex","Math","max","a","b","filter","s","oneLeft","windowPostMessage","data","window","parent","postMessage","e","console","error","parseArg","parts","split","key","decodeURIComponent","makeQueryString","query","sep","result","httpToWsProtocol","url","mappings","http","https","from","to","substr","Error","join","_len","arguments","Array","_key","reduce","current","cleanA","replace","cleanB","joinPair","BlankState","react_default","createElement","location","origin","React","Component","colors","breakpoints","themes","LoadingIndicatorWrapper","styled","display","alignItems","justifyContent","height","width","LoadingIndicator","className","style","HIGHLIGHT_DIM","DEAD_OPACITY","CELL_SIZE","CELL_SPACING","FOOD_SIZE","toFixed","toGridSpace","slot","getPartWidth","extraWidth","getPartHeight","extraHeight","getPartXOffset","xBias","getPartYOffset","yBias","getOpacity","highlightedSnake","range","size","push","Grid","snakeIndex","this","renderHeadPart","renderTailPart","behind","checkIfCornerPart","renderCornerPart","renderMiddlePart","highlighted","getHeadXOffset","getHeadYOffset","box","viewBox","baseVal","transform","halfX","halfY","getHeadTransform","viewBoxStr","fill","opacity","shapeRendering","dangerouslySetInnerHTML","__html","innerHTML","determineCornerType","d","getTailXOffset","getTailYOffset","getTailTransform","_this","unsortedSnakes","props","sortedSnakes","sort","viewBoxWidth","columns","viewBoxHeight","rows","maxWidth","maxHeight","row","col","theme","renderPart","f","foodIndex","cx","cy","r","renderGrid","Board","grid","streamAll","receive","Promise","resolve","reject","ws","WebSocket","addEventListener","obj","JSON","parse","close","loaded","getSvg","path","requireSvg","fetchSvg","_callee","response","svgText","svg","regenerator_default","wrap","_context","prev","fetch","sent","text","makeDom","abrupt","stop","wrapper","document","trim","firstChild","DEFAULT_SNAKE_HEAD","DEFAULT_SNAKE_TAIL","fetchResult","json","delay","millis","setTimeout","getAllSvgs","all","unique","assignHeadAndTailUrls","getSnakeHeadSvgUrl","getSnakeTailSvgUrl","setHeadAndTailSvgs","_callee2","_context2","paths","t0","finish","isIllegalSvgPath","nameOrPath","indexOf","svgUrlFromName","base","relative","prepareFrame","_callee3","_context3","fetchGameInfo","baseUrl","gameId","get","streamAllFrames","_x5","_x6","_x7","_streamAllFrames","apply","_callee5","receiveFrame","game","chain","onFrame","wsUrl","_context5","then","asyncToGenerator","mark","_callee4","_context4","getFrameByTurn","frames","AvatarWrapper","_templateObject","paddingBottom","HealthBarWrapper","background","borderRadius","HealthBar","_ref","backgroundColor","CauseOfDeath","_ref2","padding","fontSize","Avatar","getReadableCauseOfDeath","Wrapper","scoreboard_templateObject","hide","_templateObject2","Scoreboard","state","toggleHighlight","getSnakeToHighlight","highlightSnake","setState","_this2","aliveSnakes","aLower","bLower","deadSnakes","reverse","orderSnakes","scoreboard_AvatarWrapper","onClick","avatar","MediaControlsWrapper","mediaControls_templateObject","KeyboardShortcutsWrapper","position","marginLeft","ShortcutsPaneTrigger","mediaControls_templateObject2","ShortcutsPane","_templateObject3","ButtonWrapper","marginBottom","Button","_templateObject4","MediaControls","paneHidden","handleParentKeyboardEvent","code","handleKeyEvent","keyboardCodeMap","toggleTheme","handleReload","reloadGame","handlePlayPause","toggleGamePause","handleBackward","stepBackwardFrame","handleForward","stepForwardFrame","handleShortcutPaneShowToggle","KeyR","ArrowLeft","ArrowRight","Space","removeEventListener","renderControls","_this$props","currentFrame","hideControls","paused","disabled","react_keyboard_event_handler_default","handleKeys","values","onKeyEvent","SVGWrapper","logo_templateObject","StyledLogo","assign","xmlns","logo_templateObject2","q","PageWrapper","game_templateObject","GameBoardWrapper","HeaderWrapper","flexDirection","marginTop","paddingRight","textAlign","LogoWrapper","game_templateObject2","TurnCount","_ref3","BoardWrapper","game_templateObject3","_ref4","hideScoreboard","ScoreboardWrapper","game_templateObject4","_ref5","Game","options","engine","setGameOptions","fetchFrames","invalidArgs","blank_state","renderGame","loading_indicator","board","mediaControls","hideMediaControls","logo","scoreboard","setTheme","setCurrentFrame","playFromFrame","dispatch","getState","frameRate","frameIndex","slicedFrames","ceiledFps","delayMillis","_frame3","lastFrame","gameOptions","slice","ceil","_x3","_x4","search","arg","connect","_getState$gameOptions","autoplay","engineUrl","_frame2","_x","_x2","_getState3","_x9","_x10","_getState","_getState2","_x8","_ref6","_callee6","_getState4","nextFrame","stepToFrame","_context6","_x11","_x12","_ref7","_callee7","_getState5","prevFrame","_context7","_x13","_x14","snakeId","initialState","middleware","applyMiddleware","thunkMiddleware","store","createStore","action","objectSpread","parseInt","Height","Width","id","find","render","es","app","getElementById"],"mappings":"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","file":"static/js/main.f01ac2a3.chunk.js","sourcesContent":["import cloneDeep from \"lodash.clonedeep\";\n\nconst DEFAULT_HEAD_DIRECTION = \"up\";\n\nconst TYPE_HEAD = \"head\";\nconst TYPE_TAIL = \"tail\";\nconst TYPE_BODY = \"body\";\n\nexport function formatFrame(frame) {\n  cleanFrame(frame);\n  const snakes = formatSnakes(frame.Snakes);\n  return {\n    turn: frame.Turn,\n    snakes: snakes,\n    food: formatPositions(frame.Food),\n    gameOver: isLastFrameOfGame(frame)\n  };\n}\n\nexport function sanitizeFrame(frame) {\n  // Copy without reference\n  const sanitizedFrame = cloneDeep(frame);\n\n  // nullify some fields\n  for (const i in sanitizedFrame.snakes) {\n    const snake = sanitizedFrame.snakes[i];\n    snake.headSvg = null;\n    snake.tailSvg = null;\n    snake._id = null;\n  }\n\n  return sanitizedFrame;\n}\n\nfunction formatSnakes(snakes) {\n  return snakes.map(formatSnake);\n}\n\nfunction formatSnake(snake) {\n  return {\n    body: snake.Body.map((_, i) => formatSnakePart(snake, i)),\n    color: snake.Color,\n    _id: snake.ID,\n    name: snake.Name,\n    health: snake.Health,\n    isDead: !!snake.Death,\n    death: formatDeath(snake.Death),\n    head: snake.HeadType && snake.HeadType.toLowerCase(),\n    tail: snake.TailType && snake.TailType.toLowerCase(),\n    headSvg: snake.HeadSvg,\n    tailSvg: snake.TailSvg\n  };\n}\n\nfunction formatDeath(death) {\n  if (!death) {\n    return;\n  }\n\n  return {\n    cause: death.Cause,\n    turn: death.Turn || 0\n  };\n}\n\nfunction headDirection(snake) {\n  return snake.Body.length > 1\n    ? getDirection(snake.Body[1], snake.Body[0])\n    : DEFAULT_HEAD_DIRECTION;\n}\n\nfunction shouldRenderPart(snake, partIndex) {\n  const headIndex = 0;\n  const tailIndex = snake.Body.length - 1;\n  const head = snake.Body[headIndex];\n  const tail = snake.Body[tailIndex];\n  const currPart = snake.Body[partIndex];\n\n  // always render head\n  if (partIndex === headIndex) {\n    return true;\n  }\n\n  // render tail if not covered by head\n  if (partIndex === tailIndex) {\n    return !(head.X === currPart.X && head.Y === currPart.Y);\n  }\n\n  // render middle part if it's in a different position than\n  // the next piece closer to head, and not in same spot as tail\n  const nextPart = snake.Body[partIndex - 1];\n  return (\n    !(tail.X === currPart.X && tail.Y === currPart.Y) &&\n    !(nextPart && nextPart.X === currPart.X && nextPart.Y === currPart.Y)\n  );\n}\n\nfunction formatSnakePart(snake, partIndex) {\n  const part = snake.Body[partIndex];\n  const shouldRender = shouldRenderPart(snake, partIndex);\n  const type = getType(snake, partIndex);\n  const { x, y } = formatPosition(part);\n  const direction = formatDirection(type, snake, part);\n\n  return {\n    direction,\n    shouldRender,\n    type,\n    x,\n    y\n  };\n}\n\nfunction formatPositions(positions) {\n  return positions.map(formatPosition);\n}\n\nfunction formatPosition(pos) {\n  return {\n    x: pos.X,\n    y: pos.Y\n  };\n}\n\nfunction formatDirection(type, snake, part) {\n  let direction;\n  if (type === \"head\") {\n    direction = headDirection(snake);\n  } else {\n    // Determine a part's direction by the unique points (x,y)\n    // occupied by the snake.\n    const uniquePoints = [...new Set(snake.Body.map(p => `${p.X},${p.Y}`))];\n    const uniqueIndex = uniquePoints.findIndex(\n      p => p === `${part.X},${part.Y}`\n    );\n\n    direction = getDirection(\n      snake.Body[uniqueIndex],\n      snake.Body[Math.max(uniqueIndex - 1, 0)]\n    );\n  }\n\n  return direction;\n}\n\nfunction getDirection(a, b) {\n  if (a.X < b.X) {\n    return \"right\";\n  } else if (b.X < a.X) {\n    return \"left\";\n  } else if (a.Y < b.Y) {\n    return \"down\";\n  }\n  return \"up\";\n}\n\nfunction getType(snake, partIndex) {\n  if (partIndex === 0) {\n    return TYPE_HEAD;\n  }\n\n  if (partIndex === snake.Body.length - 1) {\n    return TYPE_TAIL;\n  }\n\n  return TYPE_BODY;\n}\n\n// This is a workaround for fields that are omitted when they have the default\n// value. ie: int fields that need to default to 0 rather than undefined.\nfunction cleanFrame(frame) {\n  frame.Turn = frame.Turn || 0;\n\n  for (const snake of frame.Snakes) {\n    for (const part of snake.Body) {\n      part.X = part.X || 0;\n      part.Y = part.Y || 0;\n    }\n  }\n\n  for (const food of frame.Food) {\n    food.X = food.X || 0;\n    food.Y = food.Y || 0;\n  }\n}\n\nfunction oneLeft(snakes) {\n  const alive = snakes.filter(s => !s.death);\n  return alive.length <= 1;\n}\n\nexport function isLastFrameOfGame(frame) {\n  const snakes = formatSnakes(frame.Snakes);\n\n  if (snakes.length === 0) {\n    return true;\n  }\n\n  if (snakes.length === 1) {\n    return !!snakes[0].death;\n  }\n\n  return oneLeft(snakes);\n}\n","import { formatFrame, sanitizeFrame } from \"../utils/game-state\";\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case \"SET_THEME\":\n      return { ...state, theme: action.theme };\n    case \"SET_GAME_OPTIONS\":\n      action.gameOptions.autoplay =\n        action.gameOptions.autoplay && action.gameOptions.autoplay === \"true\";\n      action.gameOptions.turn = parseInt(action.gameOptions.turn) || 0;\n      return { ...state, gameOptions: action.gameOptions };\n    case \"PAUSE_GAME\":\n      return { ...state, paused: true };\n    case \"GAME_OVER\":\n      return { ...state, paused: true };\n    case \"RESUME_GAME\":\n      return { ...state, paused: false };\n    case \"SET_CURRENT_FRAME\":\n      windowPostMessage({\n        action: action.type,\n        frame: sanitizeFrame(action.frame)\n      });\n      return { ...state, currentFrame: action.frame };\n    case \"RECEIVE_FRAME\":\n      const frame = formatFrame(action.frame);\n      return {\n        ...state,\n        grid: {\n          height: action.game.Game.Height,\n          width: action.game.Game.Width\n        },\n        frames: [...state.frames, frame] // Be smart: this consumes A LOT of memory...\n      };\n    case \"REQUEST_FRAMES\":\n      return { ...state };\n    case \"FETCH_FRAMES\":\n      return { ...state };\n    case \"HIGHLIGHT_SNAKE\":\n      windowPostMessage({\n        action: action.type,\n        id: action.snakeId,\n        name: action.snakeId\n          ? state.currentFrame.snakes.find(s => s._id === action.snakeId).name\n          : null\n      });\n      return { ...state, highlightedSnake: action.snakeId };\n    default:\n      return { ...state };\n  }\n};\n\nfunction windowPostMessage(data) {\n  if (!window.parent) {\n    return;\n  }\n  try {\n    window.parent.postMessage(data, \"*\");\n  } catch (e) {\n    console.error(e);\n  }\n}\n","// Creates a dictionary of parameters based on the given query string. q should\n// look like \"?foo=bar&thing=blah\".\nexport function parseQueryString(q) {\n  if (!q || !q.length) {\n    return {};\n  }\n\n  // Array of key/value pairs\n  const args = q\n    .substr(1)\n    .split(\"&\")\n    .map(parseArg);\n\n  // Convert to object\n  return args.reduce((result, arg) => {\n    result[arg.key] = arg.value;\n    return result;\n  }, {});\n}\n\n// Converts \"asdf=qwer\" to { asdf: \"qwer\" } or \"asdf\" to { asdf: true }. The\n// latter example is to allow switch-like parameters like ?enableThing without\n// an equals sign.\nfunction parseArg(a) {\n  const parts = a.split(\"=\");\n  const key = parts[0];\n  const value = parts[1] === undefined ? true : decodeURIComponent(parts[1]);\n  return { key, value };\n}\n\n// Converts { a: \"aaa\", b: \"bbb\" } to \"?a=aaa&b=bbb\"\nexport function makeQueryString(query) {\n  if (!query) {\n    return \"\";\n  }\n\n  let sep = \"?\";\n  let result = \"\";\n\n  for (const key in query) {\n    const value = query[key];\n    result += `${sep}${key}=${value}`;\n    sep = \"&\";\n  }\n\n  return result;\n}\n\n// Converts http://foo to ws://foo or https://foo to wss://foo\nexport function httpToWsProtocol(url) {\n  const mappings = {\n    http: \"ws\",\n    https: \"wss\"\n  };\n\n  for (const from in mappings) {\n    const to = mappings[from];\n    if (url.substr(0, from.length + 1) === from + \":\") {\n      return to + url.substr(from.length);\n    }\n  }\n\n  throw new Error(\"Invalid URL: \" + url);\n}\n\n// Joins path components and makes sure there is exactly one '/' separating\n// them.\nexport function join(...parts) {\n  function joinPair(a, b) {\n    const cleanA = a.replace(/\\/+$/, \"\");\n    const cleanB = b.replace(/^\\/+/, \"\");\n\n    if (cleanA === \"\") {\n      return cleanB;\n    }\n\n    if (cleanB === \"\") {\n      return cleanA;\n    }\n\n    return `${cleanA}/${cleanB}`;\n  }\n\n  return parts.reduce((current, next) => joinPair(current, next), \"\");\n}\n","import React from \"react\";\n\nclass BlankState extends React.Component {\n  render() {\n    return (\n      <div>\n        To run a game you need to specify engine and game parameters in the URL.\n        For example:\n        <pre>\n          {window.location.origin}?engine=&lt;ENGINE_URL&gt;&amp;game=&lt;GAME_ID&gt;\n        </pre>\n      </div>\n    );\n  }\n}\n\nexport default BlankState;\n","export const colors = {\n  // Page\n  pageBackground: \"transparent\",\n\n  // Grid\n  gridDot: \"#6a208f\",\n  food: \"#ff5c75\",\n\n  // Scoreboard\n  healthBar: \"#0f0\",\n  healthBarBackground: \"#fefefe\",\n  healthBarOutline: \"#666\",\n  healthBarDeathBackground: \"#f1f1f1\",\n  healthBarDeathBackgroundDark: \"#bbb\",\n\n  // Misc\n  lightText: \"#efefef\",\n  darkText: \"#222\",\n\n  // Colour names (from theme)\n  blue: \"#007bff\",\n  indigo: \"#6610f2\",\n  purple: \"#6f42c1\",\n  pink: \"#e83e8c\",\n  red: \"#dc3545\",\n  orange: \"#fd7e14\",\n  yellow: \"#ffc107\",\n  green: \"#28a745\",\n  teal: \"#20c997\",\n  cyan: \"#17a2b8\",\n  white: \"#fff\",\n  gray: \"#6c757d\",\n  grayLight: \"#f1f1f1\",\n  grayDark: \"#343a40\",\n  primary: \"#007bff\",\n  secondary: \"#6c757d\",\n  success: \"#28a745\",\n  info: \"#17a2b8\",\n  warning: \"#ffc107\",\n  danger: \"#dc3545\",\n  light: \"#f8f9fa\",\n  dark: \"#343a40\"\n\n  // OLD\n  // orange: \"#ffa500\",\n  // purple: \"#240458\",\n};\n\nexport const breakpoints = {\n  sm: \"576px\",\n  md: \"768px\",\n  lg: \"992px\",\n  xl: \"1200px\"\n};\n\nexport const themes = {\n  // Themes\n  dark: \"dark\",\n  light: \"light\"\n};\n","import React from \"react\";\nimport styled from \"react-emotion\";\n\nimport { colors } from \"../theme\";\n\nconst LoadingIndicatorWrapper = styled(\"div\")({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  height: \"100%\",\n  width: \"100%\"\n});\n\nclass LoadingIndicator extends React.Component {\n  render() {\n    return (\n      <LoadingIndicatorWrapper>\n        <div\n          className=\"la-ball-grid-beat la-dark la-2x\"\n          style={{\n            color: colors.food\n          }}\n        >\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </div>\n      </LoadingIndicatorWrapper>\n    );\n  }\n}\n\nexport default LoadingIndicator;\n","import React from \"react\";\nimport { colors, themes } from \"../theme\";\n\nconst HIGHLIGHT_DIM = 0.15;\nconst DARK_DIM = 0.75;\nconst DEAD_OPACITY = 0.1;\n\nconst CELL_SIZE = 20;\nconst CELL_SPACING = 4;\nconst FOOD_SIZE = (CELL_SIZE / 3.25).toFixed(2);\n\nfunction toGridSpace(slot) {\n  return (CELL_SIZE + CELL_SPACING) * slot + CELL_SPACING;\n}\n\nfunction getPartWidth(part) {\n  const extraWidth =\n    part.direction === \"left\" || part.direction === \"right\" ? CELL_SPACING : 0;\n  return CELL_SIZE + extraWidth;\n}\n\nfunction getPartHeight(part) {\n  const extraHeight =\n    part.direction === \"up\" || part.direction === \"down\" ? CELL_SPACING : 0;\n  return CELL_SIZE + extraHeight;\n}\n\nfunction getPartXOffset(part) {\n  const xBias = part.direction === \"left\" ? -CELL_SPACING : 0;\n  return toGridSpace(part.x) + xBias;\n}\n\nfunction getPartYOffset(part) {\n  const yBias = part.direction === \"up\" ? -CELL_SPACING : 0;\n  return toGridSpace(part.y) + yBias;\n}\n\nfunction getTailXOffset(part) {\n  switch (part.direction) {\n    case \"left\":\n      return toGridSpace(part.x) - CELL_SPACING;\n    case \"right\":\n      return toGridSpace(part.x) + CELL_SPACING;\n    default:\n      return toGridSpace(part.x);\n  }\n}\n\nfunction getTailYOffset(part) {\n  switch (part.direction) {\n    case \"up\":\n      return toGridSpace(part.y) - CELL_SPACING;\n    case \"down\":\n      return toGridSpace(part.y) + CELL_SPACING;\n    default:\n      return toGridSpace(part.y);\n  }\n}\n\nfunction getHeadXOffset(part) {\n  switch (part.direction) {\n    case \"left\":\n      return toGridSpace(part.x);\n    case \"right\":\n      return toGridSpace(part.x);\n    default:\n      return toGridSpace(part.x);\n  }\n}\n\nfunction getHeadYOffset(part) {\n  switch (part.direction) {\n    case \"up\":\n      return toGridSpace(part.y);\n    case \"down\":\n      return toGridSpace(part.y);\n    default:\n      return toGridSpace(part.y);\n  }\n}\n\nfunction getOpacity(snake, highlightedSnake) {\n  if (!snake.isDead) {\n    if (highlightedSnake) {\n      return snake._id === highlightedSnake ? 1 : HIGHLIGHT_DIM;\n    }\n  } else {\n    if (highlightedSnake) {\n      return snake._id === highlightedSnake ? 1 : 0;\n    }\n  }\n\n  return snake.isDead ? DEAD_OPACITY : 1;\n}\n\nfunction range(size) {\n  const result = [];\n  for (let i = 0; i < size; i++) {\n    result.push(i);\n  }\n  return result;\n}\n\nfunction sortAliveSnakesOnTop(snakes) {\n  return snakes.concat().sort((a, b) => {\n    const aOrder = a.isDead ? 0 : 1;\n    const bOrder = b.isDead ? 0 : 1;\n    return aOrder - bOrder;\n  });\n}\n\nfunction getHeadTransform(direction, viewBox) {\n  const halfX = viewBox.width / 2;\n  const halfY = viewBox.height / 2;\n  switch (direction) {\n    case \"left\":\n      return `rotate(180 ${halfX} ${halfY})`;\n    case \"up\":\n      return `rotate(-90 ${halfX} ${halfY})`;\n    case \"down\":\n      return `rotate(90 ${halfX} ${halfY})`;\n    default:\n      return \"\";\n  }\n}\n\nfunction getTailTransform(direction, viewBox) {\n  const halfX = viewBox.width / 2;\n  const halfY = viewBox.height / 2;\n  switch (direction) {\n    case \"right\":\n      return `rotate(180 ${halfX} ${halfY})`;\n    case \"down\":\n      return `rotate(-90 ${halfX} ${halfY})`;\n    case \"up\":\n      return `rotate(90 ${halfX} ${halfY})`;\n    default:\n      return \"\";\n  }\n}\n\nfunction checkIfCornerPart(snake, partIndex) {\n  // If head or tail of the snake, then false\n  if (partIndex === 0 || partIndex === snake.body.length - 1) return false;\n\n  const behind = snake.body[partIndex + 1];\n  const current = snake.body[partIndex];\n\n  // Return false if the behind part has the same position as the current.\n  // Relevant for when the snake initially spawns.\n  if (behind.x === current.x && behind.y === current.y) return false;\n\n  return behind.direction !== current.direction;\n}\n\nfunction determineCornerType(snake, partIndex) {\n  // If head or tail of the snake, then false\n  if (partIndex === 0 || partIndex === snake.body.length - 1) return false;\n\n  const behind = snake.body[partIndex + 1];\n  const current = snake.body[partIndex];\n\n  return `${current.direction} ${behind.direction}`;\n}\n\nclass Grid extends React.Component {\n  renderPart(snake, snakeIndex, part, partIndex, highlightedSnake) {\n    switch (part.type) {\n      case \"head\":\n        return this.renderHeadPart(snake, snakeIndex, part, highlightedSnake);\n      case \"tail\":\n        return this.renderTailPart(snake, snakeIndex, part, highlightedSnake);\n      default:\n        if (checkIfCornerPart(snake, partIndex)) {\n          return this.renderCornerPart(\n            snake,\n            snakeIndex,\n            part,\n            partIndex,\n            highlightedSnake\n          );\n        } else {\n          return this.renderMiddlePart(\n            snake,\n            snakeIndex,\n            part,\n            partIndex,\n            highlightedSnake\n          );\n        }\n    }\n  }\n\n  renderHeadPart(snake, snakeIndex, part, highlighted) {\n    const x = getHeadXOffset(part);\n    const y = getHeadYOffset(part);\n    const box = snake.headSvg.viewBox.baseVal;\n    const transform = getHeadTransform(part.direction, box);\n    const viewBoxStr = `${box.x} ${box.y} ${box.width} ${box.height}`;\n\n    return (\n      <svg\n        key={\"part\" + snakeIndex + \",head\"}\n        viewBox={viewBoxStr}\n        x={x}\n        y={y}\n        width={CELL_SIZE}\n        height={CELL_SIZE}\n        fill={snake.color}\n        opacity={getOpacity(snake, highlighted)}\n        shapeRendering=\"optimizeSpeed\"\n      >\n        <g\n          transform={transform}\n          dangerouslySetInnerHTML={{ __html: snake.headSvg.innerHTML }}\n        />\n      </svg>\n    );\n  }\n\n  renderMiddlePart(snake, snakeIndex, part, partIndex, highlighted) {\n    if (!part.shouldRender) {\n      return <svg key={\"part\" + snakeIndex + \",\" + partIndex} />;\n    }\n\n    return (\n      <rect\n        key={`part${snakeIndex},${part.x},${part.y}`}\n        x={getPartXOffset(part)}\n        y={getPartYOffset(part)}\n        width={getPartWidth(part)}\n        height={getPartHeight(part)}\n        fill={snake.color}\n        opacity={getOpacity(snake, highlighted)}\n        shapeRendering=\"optimizeSpeed\"\n      />\n    );\n  }\n\n  renderCornerPart(snake, snakeIndex, part, partIndex, highlighted) {\n    if (!part.shouldRender) {\n      return (\n        <svg\n          key={`part${snakeIndex},${part.x},${part.y}`}\n          shapeRendering=\"optimizeSpeed\"\n        />\n      );\n    }\n\n    let viewBox, transform;\n    let path = \"M0,0 h40 a60,60 0 0 1 60,60 v80 h-100 z\";\n\n    switch (part.direction) {\n      case \"left\":\n      case \"right\":\n        viewBox = \"0 0 120 100\";\n        break;\n      case \"up\":\n      case \"down\":\n      default:\n        viewBox = \"0 0 100 120\";\n        break;\n    }\n\n    switch (determineCornerType(snake, partIndex)) {\n      case \"down left\":\n        transform = \"scale(-1,1) translate(-100, 0)\";\n        break;\n      case \"left down\":\n        transform = \"rotate(90,0,0) translate(0,-120)\";\n        break;\n      case \"right down\":\n        transform = \"rotate(90,0,0) scale(1,-1)\";\n        break;\n      case \"up right\":\n        transform = \"scale(1,-1) translate(0,-120)\";\n        break;\n      case \"up left\":\n        transform = \"scale(-1,-1) translate(-100,-120)\";\n        break;\n      case \"right up\":\n        transform = \"rotate(-90,0,0) translate(-100,0)\";\n        break;\n      case \"left up\":\n        transform = \"rotate(-90,0,0) scale(1,-1) translate(-100,-120)\";\n        break;\n      case \"down right\":\n      default:\n        break;\n    }\n\n    return (\n      <svg\n        key={`part${snakeIndex},${part.x},${part.y}`}\n        x={getPartXOffset(part)}\n        y={getPartYOffset(part)}\n        width={getPartWidth(part)}\n        height={getPartHeight(part)}\n        opacity={getOpacity(snake, highlighted)}\n        fill={snake.color}\n        viewBox={viewBox}\n        shapeRendering=\"optimizeSpeed\"\n      >\n        <path d={path} transform={transform} />\n      </svg>\n    );\n  }\n\n  renderTailPart(snake, snakeIndex, part, highlighted) {\n    const x = getTailXOffset(part);\n    const y = getTailYOffset(part);\n    const box = snake.tailSvg.viewBox.baseVal;\n    const transform = getTailTransform(part.direction, box);\n    const viewBoxStr = `${box.x} ${box.y} ${box.width} ${box.height}`;\n\n    if (!part.shouldRender) {\n      return <svg key={\"part\" + snakeIndex + \",tail\"} />;\n    }\n\n    return (\n      <svg\n        key={\"part\" + snakeIndex + \",tail\"}\n        viewBox={viewBoxStr}\n        x={x}\n        y={y}\n        width={CELL_SIZE}\n        height={CELL_SIZE}\n        fill={snake.color}\n        opacity={getOpacity(snake, highlighted)}\n        shapeRendering=\"optimizeSpeed\"\n      >\n        <g\n          transform={transform}\n          dangerouslySetInnerHTML={{ __html: snake.tailSvg.innerHTML }}\n        />\n      </svg>\n    );\n  }\n\n  renderGrid() {\n    const unsortedSnakes = this.props.snakes || [];\n    const food = this.props.food || [];\n\n    // Make alive snakes render on top of dead snakes\n    const sortedSnakes = sortAliveSnakesOnTop(unsortedSnakes);\n\n    const viewBoxWidth = toGridSpace(this.props.columns);\n    const viewBoxHeight = toGridSpace(this.props.rows);\n\n    return (\n      <svg\n        width={this.props.maxWidth}\n        height={this.props.maxHeight}\n        x={this.props.x}\n        y={this.props.y}\n        viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}\n      >\n        {range(this.props.rows).map((_, row) =>\n          range(this.props.columns).map((_, col) => (\n            <rect\n              key={\"cell\" + row + \",\" + col}\n              x={toGridSpace(col)}\n              y={toGridSpace(row)}\n              width={CELL_SIZE}\n              height={CELL_SIZE}\n              fill={\n                this.props.theme === themes.dark ? \"#ddd\" : colors.grayLight\n              }\n              opacity={this.props.theme === themes.dark ? DARK_DIM : null}\n              shapeRendering=\"optimizeSpeed\"\n            />\n          ))\n        )}\n\n        {sortedSnakes.map((snake, snakeIndex) => {\n          return snake.body.map((part, partIndex) =>\n            this.renderPart(\n              snake,\n              snakeIndex,\n              part,\n              partIndex,\n              this.props.highlightedSnake\n            )\n          );\n        })}\n\n        {food.map((f, foodIndex) => (\n          <circle\n            key={\"food\" + foodIndex}\n            cx={toGridSpace(f.x) + CELL_SIZE / 2}\n            cy={toGridSpace(f.y) + CELL_SIZE / 2}\n            r={FOOD_SIZE}\n            fill={colors.food}\n            shapeRendering=\"optimizeQuality\"\n          />\n        ))}\n      </svg>\n    );\n  }\n\n  render() {\n    if (this.props.snakes) {\n      return this.renderGrid();\n    } else {\n      return;\n    }\n  }\n}\n\nexport default Grid;\n","import React from \"react\";\nimport Grid from \"./grid\";\n\nconst BOARD_SIZE = 100;\n\nclass Board extends React.Component {\n  render() {\n    return (\n      <svg viewBox={`0 0 ${BOARD_SIZE} ${BOARD_SIZE}`}>\n        <Grid\n          snakes={this.props.snakes}\n          food={this.props.food}\n          columns={this.props.columns}\n          rows={this.props.rows}\n          highlightedSnake={this.props.highlightedSnake}\n          theme={this.props.theme}\n          maxWidth={BOARD_SIZE}\n          maxHeight={BOARD_SIZE}\n          x={0}\n          y={0}\n        />\n      </svg>\n    );\n  }\n}\n\nexport default Board;\n","// Establishes websocket connection on given url and then calls receive for\n// every object sent from the server. Returns a promise that resolves when\n// receive returns true or when the server closes the connection.\nexport function streamAll(url, receive) {\n  let done = false;\n\n  return new Promise((resolve, reject) => {\n    const ws = new WebSocket(url);\n    ws.addEventListener(\"message\", e => {\n      const obj = JSON.parse(e.data);\n      done = receive(obj);\n      if (done) {\n        ws.close();\n        resolve();\n      }\n    });\n\n    ws.addEventListener(\"onerror\", e => {\n      reject(e);\n    });\n\n    ws.addEventListener(\"onclose\", e => {\n      if (!done) {\n        done = true;\n        resolve();\n      }\n    });\n  });\n}\n","/**\n * This file contains helper functions for async loading svg files that\n * can be injected inline into an html <svg> element. This is better than\n * alternatives for the following reasons:\n *\n *    <use href=\"...\"> has a problem where the game could start before the\n *    svg has finished loading whereas this method gives a promise we can wait\n *    for.\n *\n *    <image src=\"...\"> has a problem where the fill color of the image cannot\n *    be overriden. Inline svg solves this problem and allows css styles to\n *    cascade into the svg content. <use> may also have this problem?\n *\n *    Directly embedding the svg xml into react components (or similar) would\n *    mostly solve everything except that it eliminates the possibility of\n *    pulling in svg data from external trusted sources.\n *\n * The main downside to this method is that the source of the svg must be\n * trusted or else you are vulnerable to xss attacks.\n */\n\nconst loaded = {};\n\nexport function loadSvgs(paths) {\n  return Promise.all(paths.map(requireSvg));\n}\n\nexport function getSvg(path) {\n  return loaded[path];\n}\n\nfunction requireSvg(path) {\n  if (path in loaded) {\n    return Promise.resolve(loaded[path]);\n  }\n\n  return fetchSvg(path);\n}\n\nasync function fetchSvg(path) {\n  const response = await fetch(path);\n  const svgText = await response.text();\n  const svg = makeDom(svgText);\n  loaded[path] = svg;\n  return svg;\n}\n\nfunction makeDom(svgText) {\n  const wrapper = document.createElement(\"div\");\n  wrapper.innerHTML = svgText.trim();\n  return wrapper.firstChild;\n}\n","import { streamAll } from \"../io/websocket\";\nimport { makeQueryString, httpToWsProtocol, join } from \"./url\";\nimport { loadSvgs, getSvg } from \"./inline-svg\";\nimport { isLastFrameOfGame } from \"./game-state\";\n\nconst DEFAULT_SNAKE_HEAD = \"regular\";\nconst DEFAULT_SNAKE_TAIL = \"regular\";\n\nasync function get(url, query) {\n  const fetchResult = await fetch(url + makeQueryString(query));\n  return fetchResult.json();\n}\n\nexport function delay(millis) {\n  return new Promise(resolve => setTimeout(resolve, millis));\n}\n\nexport function getReadableCauseOfDeath(cause) {\n  // Based on https://github.com/battlesnakeio/engine/blob/master/rules/death_cause.go\n\n  switch (cause) {\n    case \"snake-collision\":\n      return \"Collided with snake body\";\n    case \"snake-self-collision\":\n      return \"Collided with own body\";\n    case \"starvation\":\n      return \"Starvation\";\n    case \"head-collision\":\n      return \"Head on head collision\";\n    case \"wall-collision\":\n      return \"Collided with a wall\";\n    default:\n      return cause;\n  }\n}\n\n// Gets a list of all unique SVG paths required by the snakes.\nfunction getAllSvgs(snakes) {\n  const all = snakes.reduce((result, snake) => {\n    return result.concat([snake.HeadType, snake.TailType]);\n  }, []);\n  const unique = new Set(all);\n  return Array.from(unique);\n}\n\nfunction assignHeadAndTailUrls(snakes) {\n  for (const snake of snakes) {\n    // Assign default if missing\n    if (!snake.HeadType) {\n      snake.HeadType = DEFAULT_SNAKE_HEAD;\n    }\n    if (!snake.TailType) {\n      snake.TailType = DEFAULT_SNAKE_TAIL;\n    }\n\n    // Format as actual URL if it's just a name\n    snake.HeadType = getSnakeHeadSvgUrl(snake.HeadType);\n    snake.TailType = getSnakeTailSvgUrl(snake.TailType);\n  }\n}\n\nasync function setHeadAndTailSvgs(snakes) {\n  assignHeadAndTailUrls(snakes);\n  await loadSvgs(getAllSvgs(snakes));\n\n  for (const snake of snakes) {\n    snake.HeadSvg = getSvg(snake.HeadType);\n    snake.TailSvg = getSvg(snake.TailType);\n  }\n}\n\nfunction isIllegalSvgPath(nameOrPath) {\n  return nameOrPath.indexOf(\"/\") >= 0 || nameOrPath.indexOf(\".\") >= 0;\n}\n\nfunction svgUrlFromName(base, relative) {\n  return join(base, relative) + \".svg\";\n}\n\nfunction getSnakeHeadSvgUrl(path) {\n  const effectivePath = isIllegalSvgPath(path) ? DEFAULT_SNAKE_HEAD : path;\n  return svgUrlFromName(\"images/snake/head\", effectivePath);\n}\n\nfunction getSnakeTailSvgUrl(path) {\n  const effectivePath = isIllegalSvgPath(path) ? DEFAULT_SNAKE_TAIL : path;\n  return svgUrlFromName(\"images/snake/tail\", effectivePath);\n}\n\nasync function prepareFrame(frame) {\n  await setHeadAndTailSvgs(frame.Snakes);\n}\n\nexport function fetchGameInfo(baseUrl, gameId) {\n  const url = join(baseUrl, `games/${gameId}`);\n  return get(url);\n}\n\nexport async function streamAllFrames(baseUrl, gameId, receiveFrame) {\n  const game = await fetchGameInfo(baseUrl, gameId);\n\n  let chain = Promise.resolve();\n  function onFrame(frame) {\n    chain = chain.then(async () => {\n      await prepareFrame(frame);\n      return receiveFrame(game, frame);\n    });\n    return isLastFrameOfGame(frame);\n  }\n\n  const wsUrl = join(httpToWsProtocol(baseUrl), `socket/${gameId}`);\n  await streamAll(wsUrl, onFrame);\n  await chain;\n}\n\nexport function getFrameByTurn(frames, turn) {\n  return frames.filter(frame => frame.turn === turn)[0];\n}\n","import React from \"react\";\nimport styled from \"react-emotion\";\nimport { breakpoints, colors, themes } from \"../theme\";\nimport { getReadableCauseOfDeath } from \"../utils/engine-client\";\n\nconst AvatarWrapper = styled(\"div\")`\n  margin-bottom: 0.5rem;\n  padding-bottom: 1rem;\n  width: 100%;\n\n  @media (min-width: ${breakpoints.lg}) {\n    margin-bottom: 1rem;\n  }\n`;\n\nconst Name = styled(\"span\")({\n  display: \"block\",\n  paddingBottom: \"0.5rem\"\n});\n\nconst HealthBarWrapper = styled(\"div\")({\n  width: \"100%\",\n  height: \"1.8rem\",\n  background: colors.healthBarBackground,\n  borderRadius: \"1.5rem\"\n});\n\nconst HealthBar = styled(\"div\")(({ color }) => ({\n  height: \"100%\",\n  backgroundColor: color,\n  borderRadius: \"inherit\"\n}));\n\nconst CauseOfDeath = styled(\"div\")(({ theme }) => ({\n  height: \"100%\",\n  padding: \".2rem .5rem\",\n  fontSize: \"1.2rem\",\n  backgroundColor:\n    theme === themes.dark\n      ? colors.healthBarDeathBackgroundDark\n      : colors.healthBarDeathBackground,\n  borderRadius: \"inherit\",\n  color: colors.darkText\n}));\n\nclass Avatar extends React.Component {\n  render() {\n    return (\n      <AvatarWrapper>\n        <Name>{this.props.snake.name}</Name>\n        <HealthBarWrapper>\n          {this.props.snake.death ? (\n            <CauseOfDeath theme={this.props.theme}>\n              {getReadableCauseOfDeath(this.props.snake.death.cause)}\n            </CauseOfDeath>\n          ) : (\n            <HealthBar\n              color={this.props.snake.color}\n              style={{\n                width: `${this.props.snake.health}%`\n              }}\n            />\n          )}\n        </HealthBarWrapper>\n      </AvatarWrapper>\n    );\n  }\n}\n\nexport default Avatar;\n","import React from \"react\";\nimport styled from \"react-emotion\";\nimport Avatar from \"./avatar\";\nimport { breakpoints, colors, themes } from \"../theme\";\n\nconst orderSnakes = snakes => {\n  // Sort by name\n  const aliveSnakes = snakes\n    .filter(s => !s.isDead)\n    .sort((a, b) => {\n      const aLower = a.name.toLowerCase();\n      const bLower = b.name.toLowerCase();\n      if (aLower < bLower) {\n        return -1;\n      }\n      if (aLower > bLower) {\n        return 1;\n      }\n      return 0;\n    });\n\n  // Sort by turn died, descending\n  const deadSnakes = snakes\n    .filter(s => s.isDead)\n    .sort((a, b) => a.death.turn - b.death.turn)\n    .reverse();\n\n  return aliveSnakes.concat(deadSnakes);\n};\n\nconst Wrapper = styled(\"div\")`\n  display: none;\n  padding-right: 2rem;\n  color: ${({ theme }) =>\n    theme === themes.dark ? colors.lightText : colors.darkText};\n  font-weight: 700;\n  font-size: 1.4rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    display: ${({ hide }) => (hide ? \"none\" : \"block\")};\n    font-size: 1.8rem;\n  }\n\n  @media (min-width: ${breakpoints.xl}) {\n    font-size: 2.2rem;\n  }\n`;\n\nconst AvatarWrapper = styled(\"div\")`\n  transition: background-color 0.2s, box-shadow 0.2s;\n  box-shadow: ${props =>\n    props.highlighted ? `0 0 0 1px ${colors.lightText}` : null};\n\n  &:hover {\n    background-color: ${props =>\n      props.theme === themes.dark ? colors.purple : colors.light};\n    cursor: pointer;\n  }\n`;\n\nclass Scoreboard extends React.Component {\n  state = {\n    highlightedSnake: null\n  };\n\n  toggleHighlight = snake => {\n    const getSnakeToHighlight = (state, snake) => {\n      return state.highlightedSnake !== snake._id ? snake._id : null;\n    };\n\n    this.props.highlightSnake(getSnakeToHighlight(this.state, snake));\n\n    this.setState(state => ({\n      highlightedSnake: getSnakeToHighlight(state, snake)\n    }));\n  };\n\n  render() {\n    const { highlightedSnake } = this.state;\n    return (\n      <Wrapper theme={this.props.theme}>\n        {this.props.snakes\n          ? orderSnakes(this.props.snakes).map((snake, i) => (\n              <AvatarWrapper\n                key={\"avatarwrapper\" + i}\n                onClick={() => this.toggleHighlight(snake)}\n                highlighted={highlightedSnake === snake._id}\n                theme={this.props.theme}\n              >\n                <Avatar\n                  snake={snake}\n                  key={\"avatar\" + i}\n                  theme={this.props.theme}\n                />\n              </AvatarWrapper>\n            ))\n          : undefined}\n      </Wrapper>\n    );\n  }\n}\n\nexport default Scoreboard;\n","import React from \"react\";\nimport styled from \"react-emotion\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\n\nimport { themes, breakpoints } from \"../theme\";\n\nconst MediaControlsWrapper = styled(\"div\")`\n  display: ${({ hide }) => (hide ? \"none\" : \"block\")};\n  margin-top: 1rem;\n  width: 100%;\n`;\n\nconst KeyboardShortcutsWrapper = styled(\"div\")({\n  position: \"relative\",\n  marginLeft: \"1rem\"\n});\n\nconst ShortcutsPaneTrigger = styled(\"div\")`\n  margin: 0;\n  padding: 1rem;\n  height: 3rem;\n  width: 3rem;\n  background: #dfdfdf;\n  border-radius: 50%;\n  line-height: 0.5;\n  text-align: center;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ShortcutsPane = styled(\"div\")`\n  position: absolute;\n  bottom: 2.5rem;\n  right: 2.5rem;\n  width: 20rem;\n  padding: 1rem;\n  border: solid 1px #999;\n  background: #fff;\n\n  @media (min-width: ${breakpoints.md}) {\n    left: 2.5rem;\n    right: 0;\n  }\n\n  h4 {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nconst ButtonWrapper = styled(\"div\")({\n  display: \"flex\",\n  justifyContent: \"center\",\n  width: \"100%\",\n  marginBottom: \"2rem\"\n});\n\nconst Button = styled(\"button\")`\n  display: inline-block;\n  min-width: 3rem;\n  text-align: center;\n  background: transparent;\n  color: ${({ theme }) => (theme === themes.dark ? \"#eee\" : \"#333\")};\n  font-size: 1.4rem;\n  border: none;\n  text-decoration: none;\n  text-align: center;\n  cursor: pointer;\n  transition: background 250ms ease-in-out, transform 150ms ease;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:disabled {\n    color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nclass MediaControls extends React.Component {\n  state = {\n    paneHidden: true\n  };\n\n  componentWillMount() {\n    this.keyboardCodeMap = {\n      KeyR: \"r\",\n      ArrowLeft: \"left\",\n      ArrowRight: \"right\",\n      Space: \"space\"\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"message\", this.handleParentKeyboardEvent);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"message\", this.handleParentKeyboardEvent);\n  }\n\n  render() {\n    return this.renderControls();\n  }\n\n  handleParentKeyboardEvent = e => {\n    const { code } = e.data;\n    this.handleKeyEvent(this.keyboardCodeMap[code]);\n  };\n\n  toggleTheme = () => {\n    this.props.toggleTheme();\n  };\n\n  handleReload = () => {\n    this.props.reloadGame();\n  };\n\n  handlePlayPause = () => {\n    this.props.toggleGamePause();\n  };\n\n  handleBackward = () => {\n    this.props.stepBackwardFrame();\n  };\n\n  handleForward = () => {\n    this.props.stepForwardFrame();\n  };\n\n  handleShortcutPaneShowToggle = () => {\n    this.setState({\n      paneHidden: !this.state.paneHidden\n    });\n  };\n\n  handleKeyEvent = key => {\n    switch (key) {\n      case \"r\":\n        this.handleReload();\n        break;\n      case \"left\":\n        this.handleBackward();\n        break;\n      case \"right\":\n        this.handleForward();\n        break;\n      case \"space\":\n        this.handlePlayPause();\n        break;\n      default:\n        break;\n    }\n  };\n\n  renderControls() {\n    const { currentFrame, hideControls, paused, theme } = this.props;\n\n    return (\n      <MediaControlsWrapper hide={hideControls}>\n        <ButtonWrapper>\n          <Button onClick={this.toggleTheme} theme={theme}>\n            Toggle Theme\n          </Button>\n          <Button\n            onClick={this.handleReload}\n            disabled={currentFrame.turn === 0 || !paused}\n            theme={theme}\n          >\n            Reload\n          </Button>\n          <Button onClick={this.handlePlayPause} theme={theme}>\n            {paused ? \"Play\" : \"Pause\"}\n          </Button>\n          <Button\n            onClick={this.handleBackward}\n            disabled={currentFrame.turn === 0 || !paused}\n            theme={theme}\n          >\n            Backward\n          </Button>\n          <Button onClick={this.handleForward} disabled={!paused} theme={theme}>\n            Forward\n          </Button>\n          <KeyboardEventHandler\n            handleKeys={Object.values(this.keyboardCodeMap)}\n            onKeyEvent={this.handleKeyEvent}\n          />\n          <KeyboardShortcutsWrapper>\n            <ShortcutsPaneTrigger onClick={this.handleShortcutPaneShowToggle}>\n              ?\n            </ShortcutsPaneTrigger>\n            {!this.state.paneHidden && (\n              <ShortcutsPane>\n                <h4>Keyboard shortcuts</h4>\n                <ul>\n                  <li>Reload = r</li>\n                  <li>Play/Pause = space</li>\n                  <li>Backward = left arrow</li>\n                  <li>Forward = right arrow</li>\n                </ul>\n              </ShortcutsPane>\n            )}\n          </KeyboardShortcutsWrapper>\n        </ButtonWrapper>\n      </MediaControlsWrapper>\n    );\n  }\n}\n\nexport default MediaControls;\n","import React from \"react\";\nimport styled from \"react-emotion\";\n\nimport { colors, themes } from \"../theme\";\n\nconst SVGWrapper = styled(\"div\")`\n  height: 100%;\n  width: 100%;\n\n  > svg {\n    object-fit: contain;\n    width: 100%;\n    height: 100%;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nconst SVGLogo = props => {\n  return (\n    <SVGWrapper>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 503 184\" {...props}>\n        <path d=\"M305.5 102.7h-36.1v-71H253v71h-36.2v-71h-27L178.2.7h146.5l-.7 31h-18.5zm-33-3h30v-71H321l.6-25h-139l9.3 25h28v71h30v-71h22.6zm226 84.5l-133.3-72.5 34.2-34.8L365.9.3l134-.1V13l-22 15.5L502.5 50h-60.8L459 87.3 439.6 107zm-128.2-73.3l117 63.7-51.8-67.8 19.8-20.1-18.5-39.8h57.4l-21.3-18.7 24-16.8V3.2l-126.3.2L403 77.6zm87-87a7.3 7.3 0 1 1 7.3-7.2 7.3 7.3 0 0 1-7.3 7.2zm0-11.5a4.2 4.2 0 1 0 4.2 4.3 4.2 4.2 0 0 0-4.2-4.3z\" />\n        <path d=\"M134.8 104l-27.2-27.6 32-76.4h34.8l43 102.7h-39.3l-5.3-13.3h-32.5zm45.4-4.4h32.5L172.3 3.1h-30.7l-30.4 72.6 22.4 22.7 4.6-12H175zM167.9 66h-22.5l11.3-30zm-18-3h13.6l-6.8-18.2zm219.6 39.7h-42.3V30.3l.7-29.6h35.3V66h28l4.7 10.7zm-39.3-3h38l24-23.8-3-6.9h-29V3.8h-29.4l-.6 26.6z\" />\n        <path d=\"M3.9 184.2L62.8 107 43.4 87.3 60.7 50H0l24.7-21.5L2.4 13V.2l59.3.1h74.7L103 77l34.2 34.8-1.8 1zm43.2-97.5l19.7 20-51.6 68 117-63.7-32.8-33.3.4-1 32-73.3H5.5v8l24 16.9L8.2 46.9h57.5zm-2-62.8a7.3 7.3 0 1 1 7.2-7.3 7.3 7.3 0 0 1-7.3 7.3zm0-11.5a4.2 4.2 0 1 0 4.1 4.2 4.2 4.2 0 0 0-4.2-4.2zM210.7 118a.2.2 0 0 1-.2 0v-.1a.2.2 0 0 1 .2.2zm4.6-45.5a49.2 49.2 0 0 0 3.5 7.6l1.4 2.6-3.3-9.7a1.1 1.1 0 0 0-1.6-.6z\" />\n        <path d=\"M223.2 94.4a1 1 0 0 0-1.2-.3l-.4-.7c-2.9-3.3-5.7-6.8-8.8-10a1 1 0 0 0-.5.8l-.5 3a2 2 0 0 0 0 .3l-1.7 11a1.1 1.1 0 0 0 .6 1.1 5.5 5.5 0 0 1-.7 1.8l.3 5v3.4a1.2 1.2 0 0 0 0 .4v.5a.7.7 0 0 0-.1.1 1.2 1.2 0 0 0 0 .4c0 .1-.1 0 0 .1v.6c0 .2 0 0 0 0a2 2 0 0 1 0 .6v1.3s-.1 0 0 0a1 1 0 0 1 0 .2v.2a.4.4 0 0 0 0 .3s-.2.1 0 .2-.1 0 0 0l-.2 1.3v1.2h.1c.1 0 0 0 0 .2a.5.5 0 0 1 0 .2.5.5 0 0 1 .2.1v.3c0 .1 0 0 0 0h.4c.2 0 0 0 0 0h.1v1a30 30 0 0 1-1.4 7.2l-.5 1.1a148.2 148.2 0 0 0-6.2-17.1l-.4-2.2c.1-.2.3-.2.5-.2a2.7 2.7 0 0 1-.4-.9 3 3 0 0 1 0-.5 1 1 0 0 0-.1-.4 2.6 2.6 0 0 0-.4-.4v-.3a.2.2 0 0 1 .2 0c.2 0 .3-.1.3-.5a12.4 12.4 0 0 0-.9-2c-.6-4.5-1.2-9-1.6-13.5a1.1 1.1 0 0 0-1.2-1l-.2-.7a1.1 1.1 0 0 0-.4-.5l-.5.4a96 96 0 0 1-11.6 12.7l-2.1 3.4a1.2 1.2 0 0 0-.1.1 1.9 1.9 0 0 1 1.3 1.4 1.1 1.1 0 0 0 .6-.5l.6-.7q-1.1 6-2.4 11.8l-2 9a45.2 45.2 0 0 0-1.5 8.7.4.4 0 0 0 .4.4 391 391 0 0 1-1 4.7.9.9 0 0 0-.4 1 11 11 0 0 0 1.9 3.8l1.4 2.5 2.2 3.4a20.3 20.3 0 0 0 2.4 2.9 7.1 7.1 0 0 0 1 .8 65.3 65.3 0 0 1 3.2 6.1 1.1 1.1 0 0 0 2-.2l4.2-23.4.3.6a.9.9 0 0 1 1.5-.2v-1.4a.8.8 0 0 1 1.7 0v.7a.7.7 0 0 1 .6.4 35 35 0 0 0 3.4 5.2.8.8 0 0 1 1.3.2c.8 1.6 1.9 3 2.7 4.6a.8.8 0 0 1-.1 1 24 24 0 0 1 3.2 3l2.3 1.9a1.3 1.3 0 0 0 1.2.2c1 1.3 1.8 2.6 2.7 4a1.1 1.1 0 0 0 2-.6c.8-6.2 1.7-12.6 1.9-18.9a7.3 7.3 0 0 1 .8-1.3c0-1.3 0-2.8.2-4.5l.5-4.5 1.6-13.3c.5-3.4 1-6.9 1.3-10.4.2-3.1-1.6-5.2-3.5-7.7zM191.7 155l-.8-1.6a1 1 0 0 0 .2-.1 1.5 1.5 0 0 1 1-.4zm.5-2.5a.4.4 0 0 0-.2-.2c-.1 0-.1-.2 0-.4h.3l-.1.5zm4.9-59v-.8l.1-.6.4 1.5a1.2 1.2 0 0 0-.5 0zm1.4 6l-.3-1v-.3c0-.1 0 0 0 0a1 1 0 0 0 .3.6l.2 1zm5.7 19.8l-.9-4.3a403.2 403.2 0 0 1 1.5 4.5.6.6 0 0 0-.6-.2zm1.2 4.4v.8l-.5-2v-1a13.3 13.3 0 0 1 .8 1.7.5.5 0 0 0-.3.5zm1.2 4.4l-.2-.2a.7.7 0 0 0 .2-.3zm-.2-2.5a14 14 0 0 1 .2 1.6 11.9 11.9 0 0 1-.2-1.5zm.3 5l-.3-1.4a3.9 3.9 0 0 0 .5.2.5.5 0 0 0 .7-.4 12 12 0 0 0 0-1.6l.4 1.4a13.1 13.1 0 0 1-1.3 1.8zm4-16.5a6.3 6.3 0 0 0 0 1.3 3 3 0 0 0 0 .7v1.1c0 .2 0 0 0 0v.1a.1.1 0 0 1 0-.1 2.3 2.3 0 0 1 0-.8v-2.1s.1 0 0 0v-.8a.2.2 0 0 0 0-.2v-.4c0-.1.1 0 0-.1v-.1a2 2 0 0 0 0-.2V109.2l.1 1.8.2 3.3h-.3zm7.9 36.6v-1.5a1.4 1.4 0 0 0 .2-.2zm2.8-53.6a.7.7 0 0 0 0-.2V96.6a1.5 1.5 0 0 0 0-.2v-.1c0-.1-.1 0 0-.1v1zm2.8 7.4l-.7 5.4v-4.6a.4.4 0 0 0 0-.1 6.3 6.3 0 0 0 0-2.4 6 6 0 0 1 .4-1.7l-.5-1v-2l.7 1.2c.8 1.5.3 3.5.1 5.2zm166.2-37.2a1 1 0 0 0-1-.7 1 1 0 0 0-.7 1.9 4 4 0 0 1-.4.2 1.1 1.1 0 0 0-.7-.3h-.3a.6.6 0 0 0-.8-.5h-.2a.6.6 0 0 0-.5-.3c-3.3.4-6.4 1.9-9.4 3.2l-2 .8a.7.7 0 0 0-1-.4 8 8 0 0 0-1.1.7.6.6 0 0 0-.6-.1 175 175 0 0 0-14 6.2l-1.5.4-4.9 1.5a23.2 23.2 0 0 0-5 1.7.8.8 0 0 0 0 1.5 107.2 107.2 0 0 1-11 4.1 1 1 0 0 0 .5 1.9l-.6.5a6.8 6.8 0 0 0-1.5 2.5l.4 1a1 1 0 0 0 0 .3c-.3 8.4 0 17 .3 25.4l-.8.2a55.5 55.5 0 0 1-9.1 1.6 52.4 52.4 0 0 1-5.5.2 1.1 1.1 0 0 0-.7-.6l-.5-.2-3.6-2.7a36.7 36.7 0 0 1-3.5-4.5v-.2a11.1 11.1 0 0 1 1-1.2l.8-1.1a4 4 0 0 0 .7-1.3 28.7 28.7 0 0 1 2.6-3.3 130.6 130.6 0 0 0 9.5-11 27 27 0 0 0 2.2-3.2 11.6 11.6 0 0 1 .2-1.8c0-.5.2-1 .3-1.4a4.2 4.2 0 0 0-1-1.7 6 6 0 0 0-1.3-.8l-1.3-.7a4.1 4.1 0 0 1-1.3-1.2 2.7 2.7 0 0 1-1.9-.7c-.5-.4-1-.9-1.7-1.3a18.3 18.3 0 0 0-1.5 1.3 8.6 8.6 0 0 1-1.7 1.2c0 .4.2.6.4.6s.3.2.4.5l-.8-.1a1.5 1.5 0 0 0-1 .2 458 458 0 0 1-8.2 9.7 29 29 0 0 0-3.5 5l-1.5 2-1.7 2.3-1 1.2V103l.2-4.6-.2-7.6a11 11 0 0 0-1.2-5.2l.3-4a1 1 0 0 0-1.6-1 1.1 1.1 0 0 0-1.9-1l-1.9 2.6q-2.1 1.5-4 3.2c-3.4-.5-3.9 2.6-3.9 5.3a1 1 0 0 0 0 1.1v1.5l.1 4.1a6.5 6.5 0 0 1-.7 2.3 53.3 53.3 0 0 1 .2 7.6l-.2 4.7-2-2.2-12.6 4.8-1 .2a3.9 3.9 0 0 0-.8.4 2.7 2.7 0 0 0-.8 0 28.6 28.6 0 0 1-1.9-3.5l-1.7-4-1.1-2.8-1.3-2.8-1-3.2-.2-.3c-.3-3.5-2.5-6.3-4.3-9.3l-.5-1.1-1.3 1.6 1 1.8-1-.2v-.2a.8.8 0 0 0-.4-.6.8.8 0 0 0 0-.1l-1 1.6a2 2 0 0 1-2.7.7l-5.3-2.6a6 6 0 0 0-.9-.3l-5 11-.5.3a18.5 18.5 0 0 0-1 3l-.2.5-1.4 3a1.1 1.1 0 0 0 .3 1.4l-.1.6a27.3 27.3 0 0 1-1 2.7 2.3 2.3 0 0 0 0 .8 2.3 2.3 0 0 0 .3.6l-.7 3-.7 2.8-.3 1.6v.1c0 .1 0 0 0 0v.4c-.2 0 0 .1-.2.2s0 .1 0 .2a1.1 1.1 0 0 1 0 .3v.5c0 .1-.2.1 0 .1 0 .2 0 .4-.2.6v.4c0 .1 0 .1 0 0a2 2 0 0 1 0 .3V124.6c.1.1 0 0 0 0v.5c0 .1-.1 0 0 .1v.8a.6.6 0 0 1-.1.2l-.1.5v.1l-.4 1.6q-1 4.2-1.6 8.8l.2 1.4-.7.9 1 .7a.4.4 0 0 1 0 .2v.1c0 .1-.1 0 0 .1v.4s-.1 0 0 0v.2a.4.4 0 0 0 0 .2v.3a1.2 1.2 0 0 1 0 .1v.2c0 .3 0 .5-.2.6h.1v2.1c0 .1 0 0 0 0v.2c0 .2 0 0 0 0v.5c0 .1 0 0 0 0v1.5a13 13 0 0 0 0 2 .1.1 0 0 1 0 .2h-.1a2.6 2.6 0 0 1 0 .7V148.9h-.1a4.6 4.6 0 0 0 0-1 2 2 0 0 0 0-.5 2.1 2.1 0 0 1 0-.3v-.4a2 2 0 0 1 0-.5v-.7a.5.5 0 0 0 0-.1v-.1.9-.2h-.2v.3a2.9 2.9 0 0 0 0 .7 1.4 1.4 0 0 1 0 .3v2.4a.1.1 0 0 1 0 .2.3.3 0 0 0 0 .1v.1a.1.1 0 0 0 .1.1.2.2 0 0 1 0 .2.1.1 0 0 1 0 .1h.1a1.3 1.3 0 0 0 0 .5h-.9v-.4a.2.2 0 0 0 0-.1v-.1a1.5 1.5 0 0 1 0-.5v-.6.3l.1.2c.1 0 0-.2 0-.2v.4a2.9 2.9 0 0 0 .1.3v.1a.7.7 0 0 1 0 .3 1 1 0 0 1 0 .3v.1l.1-.1c.1-.1 0 0 0 0v-.2a.2.2 0 0 1 0 .2c.1 0 0 .2 0 .2a3.4 3.4 0 0 0 .2.8v.1a.7.7 0 0 1 0 .4h.2c-.1 0 0-.2 0-.2v-.1l.1.1c.1 0 0 0 0 .1a3.4 3.4 0 0 1 0-.5s.2 0 0 0 .1 0 0-.2v-.3a4.5 4.5 0 0 0 .9 1.9 2.9 2.9 0 0 0 3 1.1 51.1 51.1 0 0 0 5.8 5.3c.6.5 2 .3 1.9-.8-.7-5.6.5-11.1 1.5-16.6a50.6 50.6 0 0 0 .9-7.6l.1-2.7a25.8 25.8 0 0 0 2.3 4.6c.7.9 2.3.4 2-.8a.9.9 0 0 0 0-.2 84.8 84.8 0 0 1 8.5-3.5l2.3-.7 1 3 .2.4a1.7 1.7 0 0 1 1.5.5l.1.1a131.4 131.4 0 0 1 3.1 15 .5.5 0 0 0 .9.3c1.3-1.4 1.7-3.5 2.3-5.4l2.2-4.8a9.2 9.2 0 0 0 .6-.7 10.7 10.7 0 0 0 1.6-3l.3-.6.4-.5a.4.4 0 0 0-.1-.6 12.8 12.8 0 0 0 .2-1.3l.1-.4v-.3a19.2 19.2 0 0 0 .5-2.2 1.1 1.1 0 0 0-1.4-1.3l-.8-2.3a5.3 5.3 0 0 1-.5-1l-.3-1c1.1-.8 4.8-.5 5.6-1.5a73 73 0 0 1 6.8-3.5c.1 1.2.2 8.4.4 9.5a6.3 6.3 0 0 1-.5.4c-.2.1-.2.3 0 .7l.3.3.5.6v.2a2.7 2.7 0 0 1-.7.3 1.4 1.4 0 0 0 0 1 8.7 8.7 0 0 0 .6.8 4 4 0 0 1 .3.5l.1 1.1a2.4 2.4 0 0 1-.1.2l.1.1c.3 2.5.7 5 .8 7.5l-.2 1a1.2 1.2 0 0 0 .2.9 24 24 0 0 1-.2 3.4l-.6 1c-.7 1.2 1 2.5 1.8 1.5a1.1 1.1 0 0 0 .7-.6l1.2-2-.7 1.6c-.7 1.3 1.3 2.5 2 1.2l3.6-7.3a3.5 3.5 0 0 0 .5 0 8.8 8.8 0 0 0 2.9-4 49 49 0 0 0 1.5-5l.6-2 3-6a9.8 9.8 0 0 0 2.1 1.5 49.7 49.7 0 0 0 9.7 3 11.7 11.7 0 0 0 1.2.4 2.3 2.3 0 0 0 .6 0l2.3.5a.6.6 0 0 0 .2.2 19 19 0 0 0 3.9.5 20.3 20.3 0 0 0 4.5 0l1.8-.3c1.9 0 4-.3 5.3-.5l.2 3a1.4 1.4 0 0 0-.2.4 4.3 4.3 0 0 0 .8 4.4v.1l-.1 1.3c0 1.5-.3 4.3 1 5.4a1.6 1.6 0 0 0 .1.2c.2 1.3.5 2.8 2 2.9a13.6 13.6 0 0 0 3.4-.8l4.5-1.2 5.7-1.4a57.8 57.8 0 0 0 7.2-1.4c2-.5 4-1.3 5.8-2l7.2-1.9c1.3-.3 1-2.4-.3-2.3a24.2 24.2 0 0 0-4.5 1 20.3 20.3 0 0 0 4-1.7 8.8 8.8 0 0 0 1.6-1 23.4 23.4 0 0 1 .9-5.6l.9-3a2.5 2.5 0 0 0-.6-.8 1.5 1.5 0 0 1-1.3-.2 9.5 9.5 0 0 1-1-1l-1.3-1a3 3 0 0 0-1.3-.9 16.6 16.6 0 0 1-3.8 1.5 9 9 0 0 0-3.5 1.8 25.8 25.8 0 0 0-4.2.6l-3.2.8q-1.5.5-3.3.8a6.3 6.3 0 0 1-2.5-.4v-9.4a6.2 6.2 0 0 0 1.8 0 4.4 4.4 0 0 1 2.2.1 2.3 2.3 0 0 1 1.7-.5 2.8 2.8 0 0 0 1.4-.2l.6-.1a.6.6 0 0 0 .3 0h.6a9.4 9.4 0 0 0 3.4-.8l.3-.2c.4 0 .9-.2 1.3-.4l.2-.1a1.1 1.1 0 0 0 2 .2 1 1 0 0 0 1-1l-.1-2c0-.2.2-.3.3-.4l2.1-2.4a3.9 3.9 0 0 0-.1-1.8 6.8 6.8 0 0 0-.8-1.5 2.1 2.1 0 0 1-1.4-.2c0-1.1 0-2.2.2-3.4a1 1 0 0 0-.3-.8 1.2 1.2 0 0 0-1.9-.1v.3a1 1 0 0 0-.3 0 1.2 1.2 0 0 0-1.2-.4l-2.7.7-4.2.8a30.4 30.4 0 0 1-6.2.8c-.2-.3 1.3-6.5 1.2-7v-.3c3.2-1.4 6.3-3.2 9.4-4.7q6-2.7 12.1-5l9.3-3.4a.8.8 0 0 1 .4-1.1 58.1 58.1 0 0 1 6-2.1c.4-.2 1.2-.6 2-.8l.4-1.4a9.8 9.8 0 0 1-1.2.2 6.3 6.3 0 0 1-1.4.1 1.1 1.1 0 0 1-.8-1.8.8.8 0 0 0 .3.3 1.1 1.1 0 0 0 .4.1h.1c-.2 0 0 0 0 0a.8.8 0 0 0 .5 0h.1a1.7 1.7 0 0 0 .3-.1 1.4 1.4 0 0 0 .7-1.2 1 1 0 0 0-.8-1 1 1 0 0 0-1 .6 1 1 0 0 0-.6 1 9.4 9.4 0 0 1-1.5.3c-1.2 0-1.4-1.4-.6-2a11.6 11.6 0 0 1 2-1 1.2 1.2 0 0 1 0-1.4 11 11 0 0 1-1.4.3 1.4 1.4 0 0 1-1.4-.7h.1a3.3 3.3 0 0 0 1.5.1c1 .5 2.2-.7 2-1.8a2 2 0 0 0-1.6-1.3 3.4 3.4 0 0 0-.5 0 96 96 0 0 1 3.3-1.8.9.9 0 0 0 .5-.2l1.8-1 3.7-1.8.7-.4.6-1.5-4.8 1.9zm-150 89l-1.2-1.3a1 1 0 0 0 1-.8l.1-.5a.6.6 0 0 0 .2 0v2.5zm8.5-22.5l-.5-1 .7.1h1.2a13.8 13.8 0 0 0-1.4 1zm3.5-13.3l-4.4.9a5.3 5.3 0 0 1-.8.2 5 5 0 0 0-1 .2l.6-1.7.7-1.6a39.9 39.9 0 0 1 1.6-4.5 30.8 30.8 0 0 1 2.3-4.4l.2-.9a178 178 0 0 1 5 10.6 40.5 40.5 0 0 1-4.2 1.2zm10 10.3l.3-.1a7.8 7.8 0 0 1 .2 1.3zm4.8 18.1q-.9-5.4-2.1-10.7a36.1 36.1 0 0 1 1.4 4v1.8a.5.5 0 0 0 .7.5l.7 2.5a10.1 10.1 0 0 1-.7 2zm22.6-5.8a.8.8 0 0 0-.2-.1l.2-.8a.8.8 0 0 0 .3-.1l.1.3zm14.7-17.5a1 1 0 0 1 .4.3l.6.4a7 7 0 0 1-1-.7zm34.2 16.5a4.4 4.4 0 0 1-.7-2l.6.6a6.2 6.2 0 0 1 .1 1.2zm13.7 1.9a27.8 27.8 0 0 0 3.2-.7c1.6-.4 3-.8 4.2-1.3a2.7 2.7 0 0 1 1 .1l-9.5 2.5c.3-.3.7-.5 1-.6zm6.7-64.2l-.9.2-.4.2v-.1l1.6-.5zm18-4.8a.1.1 0 0 0-.1 0l-.4.1s0 .1 0 0h-.2a.7.7 0 0 0-.1.2c0-.1-.2 0-.2 0h-.2a.7.7 0 0 0 .2-.2l.3-.1 1.4-.4zm6.1 1.7l.3-.1a.1.1 0 0 1 .1 0l-.2.2h-.1l-.2.1c-.2.1 0 0-.1 0h-.1zm1.6-6.2l-5 2.6-3.7 1.9a1 1 0 0 0 0-.7 84.8 84.8 0 0 0 10.2-4.8 1 1 0 0 0 .1.3l-1.5.7zM377.2 90zm1-.2z\" />\n        <path d=\"M184.5 76.6l-1 1.4a1 1 0 0 0-1.3-.5l-.4.2a1.1 1.1 0 0 0-.5-1 .8.8 0 0 0-.1-1 .8.8 0 0 0-.4-1 1.6 1.6 0 0 0-1-.3.8.8 0 0 0-.3-.9l2-1.2a1 1 0 0 1 0-.4 3 3 0 0 1 1-1l-3.5 2.4a1.7 1.7 0 0 0-1 .1 1.1 1.1 0 0 0-.8 0 1 1 0 0 0-.7 1l-5 3-.2.1a2 2 0 0 0-.5 0 2 2 0 0 0-1.2 1l-3.3 2.2a26.6 26.6 0 0 0-4.4 3l-1.4.7 1-.8c3.4-2.5 7.1-5 10.3-7.7.6-.6-.2-1.6-1-1.2a94.6 94.6 0 0 0-11 7.4l-10.6 8c-7 5.2-14 10.6-20.4 16.4a1 1 0 0 0-.4.7 17.3 17.3 0 0 0-4.2 3.5v.1c.7 4.8 4.2 8.4 6.4 12.7a110.5 110.5 0 0 1 14.3 3q2.3.6 4.5 1.4a12.5 12.5 0 0 1 4.3 2c2 1.8 1.7 4.7 1 7.2a43.9 43.9 0 0 1-6 5.6l-7.5 3.7-6.4 3.5a2 2 0 0 1 0 .3l-3.5 1.4a68.3 68.3 0 0 0-7.7 3.1.8.8 0 0 0 .3 1.6.8.8 0 0 0 .8 1.1 36.4 36.4 0 0 0 6.5-2.7l.4-.2c-4.9 4.3-10.5 7.7-16 11.3-2.2 1.5-4.5 3-6.7 4.7a.8.8 0 0 1 .2.2 74.2 74.2 0 0 1 11.4-6.5c.9-.4 1.8.7 1 1.3-2 1.9-4.5 3.4-6.3 5.5l.7-.2h.3l.1-.2.4-.1a38.7 38.7 0 0 1 5-2.9 1.3 1.3 0 0 1 1.6.7 2.4 2.4 0 0 0 .2-.2.6.6 0 0 0 .2 0l1.5-.7-1.9 1a.8.8 0 0 1-.3 1l-.3.1a11.7 11.7 0 0 0 1.4-.7l.6-.3c.8-.6 1.6.6 1 1.2 2.7-1.5 5.4-2.9 8.2-4.2a.9.9 0 0 0 0 .6l-.5.3a.5.5 0 0 0 .3 1 62.6 62.6 0 0 0 6.3-2l4.4-2.6.6-.4a9 9 0 0 1 2.3.1.5.5 0 0 0 .7-.5 2.7 2.7 0 0 1 0-.6c-.2.4.4 1 .8.5a9.1 9.1 0 0 1 1.3-1.2 36.4 36.4 0 0 0 6.5-3.5 17.7 17.7 0 0 0 3.2-1.9l1.9-1.4a33.8 33.8 0 0 0 2.8-2l.9-.7a13.9 13.9 0 0 0 2.2-1.7 19 19 0 0 1 2-1.5.5.5 0 0 0 .3-.6l.8-1.4a25.9 25.9 0 0 0 2.8-6.7 21.4 21.4 0 0 0 .6-7.7 10.7 10.7 0 0 0-1.2-4l-1-2.1c-.7-1.1-1.2-2.4-2-3.3a23.8 23.8 0 0 0-5.3-5 33 33 0 0 0-6.7-3.3c-2.3-.9-5.4-1.2-7.3-2.6a1.1 1.1 0 0 1-.3-.4l13.8-9c5.6-3.7 11.5-7.3 17-11.4l3.7-2a2.7 2.7 0 0 0 0-.2 1.9 1.9 0 0 1-1.3-1.6 2 2 0 0 1-.7-1.3.8.8 0 0 0 .3-.1 6.8 6.8 0 0 0 1.4-3.6 1 1 0 0 0 1.5-.3l.1-.8a1 1 0 0 0-1-1l1-2a.9.9 0 0 0-1.6-1zm-36.8 47.9a1.2 1.2 0 0 0-.2.2l-2.8-.8 1.8.3 1.4.2zm-10.2 40.4l1.3-.7a63.7 63.7 0 0 1-1.3.7zm16.3-8.6l-.3.3-.6.2.1-.1zm7.7-27a4 4 0 0 1 .1 3 11.9 11.9 0 0 0-.1-3zm4.6 19.8l-1.3 1-.6.4.4-.5 1.5-1zM147.2 160l-1.1.6h-.3l1.4-.5zm2-15.1a3 3 0 0 1 .4-.2l.3-.2h.3a2.7 2.7 0 0 0 .4-.2h.2a.6.6 0 0 1 .2-.1l-.3.2h-.1c-.2.2-.5.2-.7.3a2.8 2.8 0 0 1-.4.2l-.5.2zm13.5-16.6l-.2.9a6.5 6.5 0 0 0-1.3-1.1zm-4.8-2a9.2 9.2 0 0 1 .7 1.4 9.2 9.2 0 0 0-1-1.1 1.7 1.7 0 0 0 .3-.4zm-.9 11.2l1-1.4-.8 1.2-.2.2zm-1.6-10a13 13 0 0 1 .4 1.4 6.6 6.6 0 0 0-1.5-1.4 8.6 8.6 0 0 0 1-.1zm-2.8-4.3a5 5 0 0 1 .5.4l-1.5-.6zm24-39a1.4 1.4 0 0 1-1.4-.8h.1a1.1 1.1 0 0 0 .3-.6.9.9 0 0 0 0-.3.7.7 0 0 0 .2-.2.9.9 0 0 0 0-1 1 1 0 0 0 .7-.3 1.1 1.1 0 0 0 .2-.4l.5-.2a2.3 2.3 0 0 0-.6 1 .7.7 0 0 0 .7.9 1 1 0 0 0 .1 1 1 1 0 0 0 1.2.2 1.4 1.4 0 0 0 .3-.1l.2-.1.3-.2a1 1 0 0 0 .5.5 18.8 18.8 0 0 1-3.2.5zm4.5-4a2.4 2.4 0 0 1-.1.3v.1a1.1 1.1 0 0 0 0 .2 1 1 0 0 0-.2-.4l.5-.4a.9.9 0 0 0-.2.2zm1.3-.5a1 1 0 0 0-.3.1 1 1 0 0 0-.5 0l1-.5zm4.8-6.8l-.1-.1a1 1 0 0 0-.8-.5 1 1 0 0 0-.7.3 1 1 0 0 0-.3.7 1 1 0 0 0 .5.8v.1a1 1 0 1 0 1.4-1.3z\" />\n      </svg>\n    </SVGWrapper>\n  );\n};\n\nconst StyledLogo = styled(SVGLogo)`\n  > path {\n    fill: ${({ color, theme }) => {\n      return !color\n        ? theme === themes.dark\n          ? colors.white\n          : colors.purple\n        : color;\n    }};\n  }\n`;\n\nexport default StyledLogo;\n","import React from \"react\";\nimport styled from \"react-emotion\";\n\nimport BlankState from \"./blank-state\";\nimport LoadingIndicator from \"./loading-indicator\";\nimport Board from \"./board\";\nimport Scoreboard from \"./scoreboard\";\nimport MediaControls from \"./mediaControls\";\nimport Logo from \"./logo\";\nimport { breakpoints, colors, themes } from \"../theme\";\n\nconst PageWrapper = styled(\"div\")`\n  position: relative;\n  height: 100%;\n  width: 100%;\n  background: ${({ theme }) =>\n    theme === themes.dark ? colors.purple : \"transparent\"};\n  background: ${({ theme }) =>\n    theme === themes.dark\n      ? `linear-gradient(45deg, #000 0%, ${colors.purple} 100%)`\n      : \"transparent\"};\n`;\n\nconst GameBoardWrapper = styled(\"div\")({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  width: \"100%\",\n  height: \"100%\"\n});\n\nconst HeaderWrapper = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  marginTop: \"1rem\",\n  marginBottom: \"1rem\",\n  paddingRight: \"1rem\",\n  textAlign: \"center\"\n});\n\nconst LogoWrapper = styled(\"div\")`\n  width: 100%;\n  height: 5rem;\n\n  @media (min-width: ${breakpoints.lg}) {\n    height: 8rem;\n  }\n`;\n\nconst TurnCount = styled(\"div\")(({ theme }) => ({\n  fontSize: \"1.4rem\",\n  color: theme === themes.dark ? colors.lightText : colors.darkText\n}));\n\nconst BoardWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n\n  @media (min-width: ${breakpoints.md}) {\n    width: ${({ hideScoreboard }) => (hideScoreboard ? \"100%\" : \"65vw\")};\n  }\n`;\n\nconst ScoreboardWrapper = styled(\"div\")`\n  display: none;\n  width: 35vw;\n  margin-left: 2rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    display: ${({ hide }) => (hide ? \"none\" : \"block\")};\n  }\n`;\n\nclass Game extends React.Component {\n  componentWillMount() {\n    const { options } = this.props;\n\n    if (options.game && options.engine) {\n      this.hideScoreboard = options.hideScoreboard === \"true\";\n      this.props.setGameOptions(options);\n      this.props.fetchFrames();\n    } else {\n      this.invalidArgs = true;\n    }\n  }\n\n  render() {\n    const { currentFrame } = this.props;\n\n    if (this.invalidArgs) {\n      return <BlankState />;\n    }\n\n    if (currentFrame) {\n      return this.renderGame();\n    }\n\n    return <LoadingIndicator />;\n  }\n\n  renderGame() {\n    const { currentFrame, options } = this.props;\n    return (\n      <PageWrapper theme={this.props.theme}>\n        <GameBoardWrapper>\n          <BoardWrapper hideScoreboard={this.hideScoreboard}>\n            <Board\n              snakes={currentFrame.snakes}\n              food={currentFrame.food}\n              columns={this.props.grid.width}\n              rows={this.props.grid.height}\n              highlightedSnake={this.props.highlightedSnake}\n              theme={this.props.theme}\n            />\n            <MediaControls\n              currentFrame={currentFrame}\n              hideControls={options.hideMediaControls === \"true\"}\n              toggleTheme={this.props.toggleTheme}\n              reloadGame={this.props.reloadGame}\n              toggleGamePause={this.props.toggleGamePause}\n              stepBackwardFrame={this.props.stepBackwardFrame}\n              stepForwardFrame={this.props.stepForwardFrame}\n              paused={this.props.paused}\n              theme={this.props.theme}\n            />\n          </BoardWrapper>\n          {!this.hideScoreboard && (\n            <ScoreboardWrapper>\n              <HeaderWrapper>\n                <LogoWrapper>\n                  <Logo theme={this.props.theme} />\n                </LogoWrapper>\n                <TurnCount theme={this.props.theme}>\n                  Turn: {currentFrame.turn}\n                </TurnCount>\n              </HeaderWrapper>\n              <Scoreboard\n                turn={currentFrame.turn}\n                snakes={currentFrame.snakes}\n                food={currentFrame.food}\n                highlightSnake={this.props.highlightSnake}\n                theme={this.props.theme}\n              />\n            </ScoreboardWrapper>\n          )}\n        </GameBoardWrapper>\n      </PageWrapper>\n    );\n  }\n}\n\nexport default Game;\n","import { delay, getFrameByTurn, streamAllFrames } from \"../utils/engine-client\";\nimport { themes } from \"../theme\";\n\nconst DEFAULT_FPS = 20;\n\nexport const setGameOptions = gameOptions => ({\n  type: \"SET_GAME_OPTIONS\",\n  gameOptions\n});\n\nexport const setTheme = theme => ({\n  type: \"SET_THEME\",\n  theme\n});\n\nexport const gameOver = () => ({\n  type: \"GAME_OVER\"\n});\n\nexport const requestFrames = () => ({\n  type: \"REQUEST_FRAMES\"\n});\n\nexport const receiveFrame = (game, frame) => ({\n  type: \"RECEIVE_FRAME\",\n  game,\n  frame\n});\n\nexport const setCurrentFrame = frame => ({\n  type: \"SET_CURRENT_FRAME\",\n  frame\n});\n\nexport const pauseGame = () => ({\n  type: \"PAUSE_GAME\"\n});\n\nexport const resumeGame = () => ({\n  type: \"RESUME_GAME\"\n});\n\nexport const highlightSnake = snakeId => ({\n  type: \"HIGHLIGHT_SNAKE\",\n  snakeId\n});\n\nexport const fetchFrames = () => {\n  return async (dispatch, getState) => {\n    const {\n      autoplay,\n      engine: engineUrl,\n      game: gameId,\n      turn\n    } = getState().gameOptions;\n\n    dispatch(requestFrames());\n\n    await streamAllFrames(engineUrl, gameId, (game, frame) => {\n      // Workaround for bug where turn exluded on turn 0\n      frame.Turn = frame.Turn || 0;\n      dispatch(receiveFrame(game, frame));\n\n      // Workaround to render the first frame into the board\n      if (frame.Turn === 0) {\n        const frame = getState().frames[0];\n        dispatch(setCurrentFrame(frame));\n      }\n    });\n\n    if (autoplay) {\n      const frame = getState().frames[0];\n      dispatch(resumeGame());\n      dispatch(playFromFrame(frame));\n    }\n\n    // Only navigate to the specified frame if it is within the\n    // amount of frames available in the game\n    if (turn && turn <= getState().frames.length) {\n      const frame = getState().frames[turn];\n      dispatch(setCurrentFrame(frame));\n    }\n  };\n};\n\nexport const playFromFrame = frame => {\n  return async (dispatch, getState) => {\n    const { frameRate } = getState().gameOptions;\n    const frames = getState().frames.slice(); // Don't modify in place\n    const frameIndex = frames.indexOf(frame);\n    const slicedFrames = frames.slice(frameIndex);\n\n    const ceiledFps = Math.ceil(frameRate || DEFAULT_FPS);\n    const delayMillis = 1000 / ceiledFps;\n\n    for (const frame of slicedFrames) {\n      if (getState().paused) return;\n      dispatch(setCurrentFrame(frame));\n      await delay(delayMillis);\n    }\n\n    const lastFrame = slicedFrames[slicedFrames.length - 1];\n    if (lastFrame.gameOver) {\n      if (!getState().paused) dispatch(gameOver());\n    } else {\n      dispatch(playFromFrame(lastFrame));\n    }\n  };\n};\n\nexport const reloadGame = () => {\n  return async (dispatch, getState) => {\n    const { frames, paused } = getState();\n    if (paused) {\n      const frame = getFrameByTurn(frames, 0);\n      dispatch(setCurrentFrame(frame));\n    }\n  };\n};\n\nexport const toggleGamePause = () => {\n  return async (dispatch, getState) => {\n    const { currentFrame, paused } = getState();\n\n    if (paused) {\n      dispatch(resumeGame());\n      dispatch(playFromFrame(currentFrame));\n    } else {\n      dispatch(pauseGame());\n    }\n  };\n};\n\nexport const toggleTheme = () => {\n  return async (dispatch, getState) => {\n    const { theme } = getState();\n    dispatch(setTheme(theme === themes.dark ? themes.light : themes.dark));\n  };\n};\n\nexport const stepForwardFrame = () => {\n  return async (dispatch, getState) => {\n    const { currentFrame, frames } = getState();\n    const nextFrame = currentFrame.turn + 1;\n    const stepToFrame = getFrameByTurn(frames, nextFrame);\n    if (stepToFrame) {\n      dispatch(setCurrentFrame(stepToFrame));\n    }\n  };\n};\n\nexport const stepBackwardFrame = () => {\n  return async (dispatch, getState) => {\n    const { currentFrame, frames } = getState();\n    const prevFrame = currentFrame.turn - 1;\n    const stepToFrame = getFrameByTurn(frames, prevFrame);\n    if (stepToFrame) {\n      dispatch(setCurrentFrame(stepToFrame));\n    }\n  };\n};\n","import { connect } from \"react-redux\";\nimport { parseQueryString } from \"../utils/url\";\nimport Game from \"../components/game\";\nimport {\n  fetchFrames,\n  reloadGame,\n  toggleGamePause,\n  toggleTheme,\n  setGameOptions,\n  stepForwardFrame,\n  stepBackwardFrame,\n  highlightSnake\n} from \"../actions\";\n\nconst options = parseQueryString(window.location.search);\n\nconst mapStateToProps = state => {\n  return {\n    options: options,\n    grid: state.grid,\n    paused: state.paused,\n    currentFrame: state.currentFrame,\n    frames: state.frames,\n    highlightedSnake: state.highlightedSnake,\n    theme: state.theme\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setGameOptions: options => dispatch(setGameOptions(options)),\n  fetchFrames: () => dispatch(fetchFrames()),\n  toggleTheme: () => dispatch(toggleTheme()),\n  reloadGame: () => dispatch(reloadGame()),\n  toggleGamePause: paused => dispatch(toggleGamePause(paused)),\n  stepForwardFrame: () => dispatch(stepForwardFrame()),\n  stepBackwardFrame: () => dispatch(stepBackwardFrame()),\n  highlightSnake: snakeId => dispatch(highlightSnake(snakeId))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Game);\n","import React from \"react\";\nimport { render } from \"react-dom\";\n// import { compose, createStore, applyMiddleware } from \"redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers\";\nimport App from \"./containers/app\";\nimport { themes } from \"./theme\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst initialState = {\n  options: null,\n  grid: [],\n  frames: [],\n  paused: true,\n  highlightedSnake: null,\n  theme: themes.light\n};\nconst middleware = applyMiddleware(thunkMiddleware);\nconst store = createStore(rootReducer, initialState, middleware);\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   composeEnhancers(applyMiddleware(thunkMiddleware))\n// );\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}